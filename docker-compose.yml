---
services:
  loki:
    image: grafana/loki:latest
    volumes:
      - ./local-config.yaml:/etc/loki/local-config.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - minio
    network_mode: host


  minio:
    image: minio/minio:latest
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server /data
    environment:
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    volumes:
      - ./.data/minio:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 15s
      timeout: 20s
      retries: 5
    network_mode: host

  grafana:
    image: grafana/grafana:latest
    environment:
      - 'GF_PATHS_PROVISIONING=/etc/grafana/provisioning'
      - 'GF_AUTH_ANONYMOUS_ENABLED=true'
      - 'GF_AUTH_ANONYMOUS_ORG_ROLE=Admin'
      - 'GF_SMTP_ENABLED=true'
      - 'GF_SMTP_HOST=mail.testcompany.com:25'
      - 'GF_SMTP_USER=grafana@test.com'
      - 'GF_SMTP_PASSWORD=password1234'
      - 'GF_SMTP_FROM_ADDRESS=grafana@test.com'
      - 'GF_SMTP_FROM_NAME=Grafana'
      - 'GF_SMTP_SKIP_VERIFY=true'
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            url: http://localhost:3100
          - name: Prometheus
            type: prometheus
            url: http://localhost:9090
        EOF

        /run.sh

    volumes:
      - ./grafana-data/provisioning:/etc/grafana/provisioning
      - ./grafana-data:/var/lib/grafana  

    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    network_mode: host

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.retention.size=2GB
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    network_mode: host
